package tokeq

import (
	"golang.org/x/net/html"
	"golang.org/x/net/html/atom"
)

// https://raw.githubusercontent.com/golang/net/master/html/atom/gen.go
// generated by go run gen.go; DO NOT EDIT


func MatchA(t html.NodeType, a atom.Atom) bool {
	return a == atom.A
}

func MatchAbbr(t html.NodeType, a atom.Atom) bool {
	return a == atom.Abbr
}

func MatchAddress(t html.NodeType, a atom.Atom) bool {
	return a == atom.Address
}

func MatchArea(t html.NodeType, a atom.Atom) bool {
	return a == atom.Area
}

func MatchArticle(t html.NodeType, a atom.Atom) bool {
	return a == atom.Article
}

func MatchAside(t html.NodeType, a atom.Atom) bool {
	return a == atom.Aside
}

func MatchAudio(t html.NodeType, a atom.Atom) bool {
	return a == atom.Audio
}

func MatchB(t html.NodeType, a atom.Atom) bool {
	return a == atom.B
}

func MatchBase(t html.NodeType, a atom.Atom) bool {
	return a == atom.Base
}

func MatchBdi(t html.NodeType, a atom.Atom) bool {
	return a == atom.Bdi
}

func MatchBdo(t html.NodeType, a atom.Atom) bool {
	return a == atom.Bdo
}

func MatchBlockquote(t html.NodeType, a atom.Atom) bool {
	return a == atom.Blockquote
}

func MatchBody(t html.NodeType, a atom.Atom) bool {
	return a == atom.Body
}

func MatchBr(t html.NodeType, a atom.Atom) bool {
	return a == atom.Br
}

func MatchButton(t html.NodeType, a atom.Atom) bool {
	return a == atom.Button
}

func MatchCanvas(t html.NodeType, a atom.Atom) bool {
	return a == atom.Canvas
}

func MatchCaption(t html.NodeType, a atom.Atom) bool {
	return a == atom.Caption
}

func MatchCite(t html.NodeType, a atom.Atom) bool {
	return a == atom.Cite
}

func MatchCode(t html.NodeType, a atom.Atom) bool {
	return a == atom.Code
}

func MatchCol(t html.NodeType, a atom.Atom) bool {
	return a == atom.Col
}

func MatchColgroup(t html.NodeType, a atom.Atom) bool {
	return a == atom.Colgroup
}

func MatchCommand(t html.NodeType, a atom.Atom) bool {
	return a == atom.Command
}

func MatchData(t html.NodeType, a atom.Atom) bool {
	return a == atom.Data
}

func MatchDatalist(t html.NodeType, a atom.Atom) bool {
	return a == atom.Datalist
}

func MatchDd(t html.NodeType, a atom.Atom) bool {
	return a == atom.Dd
}

func MatchDel(t html.NodeType, a atom.Atom) bool {
	return a == atom.Del
}

func MatchDetails(t html.NodeType, a atom.Atom) bool {
	return a == atom.Details
}

func MatchDfn(t html.NodeType, a atom.Atom) bool {
	return a == atom.Dfn
}

func MatchDialog(t html.NodeType, a atom.Atom) bool {
	return a == atom.Dialog
}

func MatchDiv(t html.NodeType, a atom.Atom) bool {
	return a == atom.Div
}

func MatchDl(t html.NodeType, a atom.Atom) bool {
	return a == atom.Dl
}

func MatchDt(t html.NodeType, a atom.Atom) bool {
	return a == atom.Dt
}

func MatchEm(t html.NodeType, a atom.Atom) bool {
	return a == atom.Em
}

func MatchEmbed(t html.NodeType, a atom.Atom) bool {
	return a == atom.Embed
}

func MatchFieldset(t html.NodeType, a atom.Atom) bool {
	return a == atom.Fieldset
}

func MatchFigcaption(t html.NodeType, a atom.Atom) bool {
	return a == atom.Figcaption
}

func MatchFigure(t html.NodeType, a atom.Atom) bool {
	return a == atom.Figure
}

func MatchFooter(t html.NodeType, a atom.Atom) bool {
	return a == atom.Footer
}

func MatchForm(t html.NodeType, a atom.Atom) bool {
	return a == atom.Form
}

func MatchH1(t html.NodeType, a atom.Atom) bool {
	return a == atom.H1
}

func MatchH2(t html.NodeType, a atom.Atom) bool {
	return a == atom.H2
}

func MatchH3(t html.NodeType, a atom.Atom) bool {
	return a == atom.H3
}

func MatchH4(t html.NodeType, a atom.Atom) bool {
	return a == atom.H4
}

func MatchH5(t html.NodeType, a atom.Atom) bool {
	return a == atom.H5
}

func MatchH6(t html.NodeType, a atom.Atom) bool {
	return a == atom.H6
}

func MatchHead(t html.NodeType, a atom.Atom) bool {
	return a == atom.Head
}

func MatchHeader(t html.NodeType, a atom.Atom) bool {
	return a == atom.Header
}

func MatchHgroup(t html.NodeType, a atom.Atom) bool {
	return a == atom.Hgroup
}

func MatchHr(t html.NodeType, a atom.Atom) bool {
	return a == atom.Hr
}

func MatchHtml(t html.NodeType, a atom.Atom) bool {
	return a == atom.Html
}

func MatchI(t html.NodeType, a atom.Atom) bool {
	return a == atom.I
}

func MatchIframe(t html.NodeType, a atom.Atom) bool {
	return a == atom.Iframe
}

func MatchImg(t html.NodeType, a atom.Atom) bool {
	return a == atom.Img
}

func MatchInput(t html.NodeType, a atom.Atom) bool {
	return a == atom.Input
}

func MatchIns(t html.NodeType, a atom.Atom) bool {
	return a == atom.Ins
}

func MatchKbd(t html.NodeType, a atom.Atom) bool {
	return a == atom.Kbd
}

func MatchKeygen(t html.NodeType, a atom.Atom) bool {
	return a == atom.Keygen
}

func MatchLabel(t html.NodeType, a atom.Atom) bool {
	return a == atom.Label
}

func MatchLegend(t html.NodeType, a atom.Atom) bool {
	return a == atom.Legend
}

func MatchLi(t html.NodeType, a atom.Atom) bool {
	return a == atom.Li
}

func MatchLink(t html.NodeType, a atom.Atom) bool {
	return a == atom.Link
}

func MatchMap(t html.NodeType, a atom.Atom) bool {
	return a == atom.Map
}

func MatchMark(t html.NodeType, a atom.Atom) bool {
	return a == atom.Mark
}

func MatchMenu(t html.NodeType, a atom.Atom) bool {
	return a == atom.Menu
}

func MatchMenuitem(t html.NodeType, a atom.Atom) bool {
	return a == atom.Menuitem
}

func MatchMeta(t html.NodeType, a atom.Atom) bool {
	return a == atom.Meta
}

func MatchMeter(t html.NodeType, a atom.Atom) bool {
	return a == atom.Meter
}

func MatchNav(t html.NodeType, a atom.Atom) bool {
	return a == atom.Nav
}

func MatchNoscript(t html.NodeType, a atom.Atom) bool {
	return a == atom.Noscript
}

func MatchObject(t html.NodeType, a atom.Atom) bool {
	return a == atom.Object
}

func MatchOl(t html.NodeType, a atom.Atom) bool {
	return a == atom.Ol
}

func MatchOptgroup(t html.NodeType, a atom.Atom) bool {
	return a == atom.Optgroup
}

func MatchOption(t html.NodeType, a atom.Atom) bool {
	return a == atom.Option
}

func MatchOutput(t html.NodeType, a atom.Atom) bool {
	return a == atom.Output
}

func MatchP(t html.NodeType, a atom.Atom) bool {
	return a == atom.P
}

func MatchParam(t html.NodeType, a atom.Atom) bool {
	return a == atom.Param
}

func MatchPre(t html.NodeType, a atom.Atom) bool {
	return a == atom.Pre
}

func MatchProgress(t html.NodeType, a atom.Atom) bool {
	return a == atom.Progress
}

func MatchQ(t html.NodeType, a atom.Atom) bool {
	return a == atom.Q
}

func MatchRp(t html.NodeType, a atom.Atom) bool {
	return a == atom.Rp
}

func MatchRt(t html.NodeType, a atom.Atom) bool {
	return a == atom.Rt
}

func MatchRuby(t html.NodeType, a atom.Atom) bool {
	return a == atom.Ruby
}

func MatchS(t html.NodeType, a atom.Atom) bool {
	return a == atom.S
}

func MatchSamp(t html.NodeType, a atom.Atom) bool {
	return a == atom.Samp
}

func MatchScript(t html.NodeType, a atom.Atom) bool {
	return a == atom.Script
}

func MatchSection(t html.NodeType, a atom.Atom) bool {
	return a == atom.Section
}

func MatchSelect(t html.NodeType, a atom.Atom) bool {
	return a == atom.Select
}

func MatchSmall(t html.NodeType, a atom.Atom) bool {
	return a == atom.Small
}

func MatchSource(t html.NodeType, a atom.Atom) bool {
	return a == atom.Source
}

func MatchSpan(t html.NodeType, a atom.Atom) bool {
	return a == atom.Span
}

func MatchStrong(t html.NodeType, a atom.Atom) bool {
	return a == atom.Strong
}

func MatchStyle(t html.NodeType, a atom.Atom) bool {
	return a == atom.Style
}

func MatchSub(t html.NodeType, a atom.Atom) bool {
	return a == atom.Sub
}

func MatchSummary(t html.NodeType, a atom.Atom) bool {
	return a == atom.Summary
}

func MatchSup(t html.NodeType, a atom.Atom) bool {
	return a == atom.Sup
}

func MatchTable(t html.NodeType, a atom.Atom) bool {
	return a == atom.Table
}

func MatchTbody(t html.NodeType, a atom.Atom) bool {
	return a == atom.Tbody
}

func MatchTd(t html.NodeType, a atom.Atom) bool {
	return a == atom.Td
}

func MatchTemplate(t html.NodeType, a atom.Atom) bool {
	return a == atom.Template
}

func MatchTextarea(t html.NodeType, a atom.Atom) bool {
	return a == atom.Textarea
}

func MatchTfoot(t html.NodeType, a atom.Atom) bool {
	return a == atom.Tfoot
}

func MatchTh(t html.NodeType, a atom.Atom) bool {
	return a == atom.Th
}

func MatchThead(t html.NodeType, a atom.Atom) bool {
	return a == atom.Thead
}

func MatchTime(t html.NodeType, a atom.Atom) bool {
	return a == atom.Time
}

func MatchTitle(t html.NodeType, a atom.Atom) bool {
	return a == atom.Title
}

func MatchTr(t html.NodeType, a atom.Atom) bool {
	return a == atom.Tr
}

func MatchTrack(t html.NodeType, a atom.Atom) bool {
	return a == atom.Track
}

func MatchU(t html.NodeType, a atom.Atom) bool {
	return a == atom.U
}

func MatchUl(t html.NodeType, a atom.Atom) bool {
	return a == atom.Ul
}

func MatchVar(t html.NodeType, a atom.Atom) bool {
	return a == atom.Var
}

func MatchVideo(t html.NodeType, a atom.Atom) bool {
	return a == atom.Video
}

func MatchWbr(t html.NodeType, a atom.Atom) bool {
	return a == atom.Wbr
}

